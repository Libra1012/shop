<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tool="http://www.springframework.org/schema/tool"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
						http://www.springframework.org/schema/tool
						http://www.springframework.org/schema/tool/spring-tool-3.2.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
	<!-- 
		1：搭建spring的开发环境
		 1.1:添加配置文件和相应的spring-3.2-core的jar包
		 1.2:创建Date对象，如果成功，spring配置OK
		 1.3:通过基于spring  JUnit测试实例化Date
		
		2：搭建hibernate开发环境
		 2.1：添加配置文件和相应的hibernate-3.6的jar +MySQL驱动包
		 2.2：分析cn/it/shop/util/HibernateSessionFactory.java的作用: 加载hibernate配置文件，创建session
		 2.3：通过逆向生成model.orm映射文件
		 2.4: 创建service，通过new的方式执行数据的入库，在jee6中，会出现异常
			    解决方案：在hibernate配置文件中配置关闭bean validation验证模式：<property name="javax.persistence.validation.mode">none</property>
		
		3:spring 与hibernate整合（采用aop来管理事务，实现声明式事务）
		 3.1: 添加配置文件和相应的spring-3.2-aop、spring-3.2-persistence、c3p0的jar包
		 3.2: 配置数据源com.mchange.v2.c3p0.ComboPooledDataSource
		 3.3: 采用LocalSessionFactoryBean取代：hibernateTemplate
		 3.4: 配置事务 管理器， 管理SessionFactory, 这样所有的session将会有声明事务
		 3.5：配置advice（通知）,是指定了哪些方法需要什么类型的事务方式
		 3.6：配置AOP切面表达式
		 3.7：让Service交给Spring管理， 并且依赖SessionFactory，如果能插入数据，则说明事务ok
		 
		4:搭建Struts的开发环境
		 4.1：添加配置文件，和相应的hibernate3.6.jar+MySQL驱动包，并且在web.xml中配置过滤器StrutsPrepareAndExecuteFilter
		 4.2: 创建action/controller，并且配置Struts.xml
		 4.3: 通过JSP访问action，如果action可以创建，则代表环境OK
		 4.4: 默认在没有整合的时候 创建action的工厂为：(Struts) for (com.opensymphony.xwork2.ObjectFactory)
	 -->	 
	 
	  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	  	<property name="driverClass" value="com.mysql.jdbc.Driver"/>
	  	<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/shop?useUnicode=true&amp;characterEncoding=utf8"/>
	  	<property name="user" value="root"/>
	  	<property name="password" value="root"/>
	  
	  </bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" >
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="advice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="*" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>	

	<aop:config>
	
	<!-- 配置 哪些包的类要切入事务 -->	
		<aop:pointcut expression="execution(* cn.it.shop.service.impl.*.*(..))" id="pointcut"/>
	<!-- 通知 + 切面表达式 才是完整的切入路径 -->
		<aop:advisor advice-ref="advice" pointcut-ref="pointcut"/>
		
	</aop:config>


</beans>